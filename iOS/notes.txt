

https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift

http://www.raywenderlich.com/114552/uistackview-tutorial-introducing-stack-views

http://blog.mengto.com/prototype-xcode-storyboard/

====


class SettingsViewController: UIViewController, UIPickerViewDelegate, UIPickerViewDataSource {


@IBAction func showPicker(sender: AnyObject) {

/*
let pickerView = UIPickerView()
pickerView.showsSelectionIndicator = true
pickerView.dataSource = self
pickerView.delegate = self

let textField = sender as! UITextField
//custom input view
textField.inputView = pickerView;
//textField.inputAccessoryView = toolbar;
*/

}

var pickerData = ["Mozzarella","Gorgonzola","Provolone","Brie","Maytag Blue","Sharp Cheddar","Monterrey Jack","Stilton","Gouda","Goat Cheese", "Asiago"]


//MARK: Data Sources
func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
return 1
}
func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
return pickerData.count
}

//MARK: Delegates
func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
return pickerData[row]
}

func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
//myLabel.text = pickerData[row]
print("row = \(row)")
}

/*
- (IBAction)showPicker:(id)sender
{
pickerView = [[UIPickerView alloc] init];
pickerView.showsSelectionIndicator = YES;
pickerView.dataSource = self;
pickerView.delegate = self;

UIToolbar* toolbar = [[UIToolbar alloc] init];
toolbar.barStyle = UIBarStyleBlackTranslucent;
[toolbar sizeToFit];

//to make the done button aligned to the right
UIBarButtonItem *flexibleSpaceLeft = [[UIBarButtonItem alloc]
initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];

UIBarButtonItem* doneButton = [[UIBarButtonItem alloc] initWithTitle:@"Done"
style:UIBarButtonItemStyleDone target:self
action:@selector(doneClicked:)];

[toolbar setItems:[NSArray arrayWithObjects:flexibleSpaceLeft, doneButton, nil]];

//custom input view
textField.inputView = pickerView;
textField.inputAccessoryView = toolbar;
}

-(void)doneClicked:(id)sender
{
[textField resignFirstResponder]; //hides the pickerView
}
*/

